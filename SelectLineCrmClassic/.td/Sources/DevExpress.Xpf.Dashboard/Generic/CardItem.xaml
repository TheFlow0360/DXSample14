<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxdash="http://schemas.devexpress.com/winfx/2008/xaml/dashboard" xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxdashi="http://schemas.devexpress.com/winfx/2008/xaml/dashboard/internal" xmlns:dxdasht="http://schemas.devexpress.com/winfx/2008/xaml/dashboard/themekeys" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys">
    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016White.v17.2;component/DevExpress.Xpf.Dashboard/Generic/DeltaValuePresenter.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <dxdash:EventToCommandConverter x:Key="EventToCommandConverter" />
    <dx:BoolInverseConverter x:Key="boolInverceConverter" />

    <DataTemplate x:Key="ActualValueTemplateKey">
        <TextBlock Text="{Binding DisplayText}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>
    <DataTemplate x:Key="TitleTemplateKey">
        <TextBlock Text="{Binding DisplayText}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>
    <DataTemplate x:Key="SubtitleTemplateKey">
        <TextBlock Text="{Binding DisplayText}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>
    <DataTemplate x:Key="PercentVariationTemplateKey">
        <TextBlock Text="{Binding DisplayText}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>
    <DataTemplate x:Key="AbsoluteVariationTemplateKey">
        <TextBlock Text="{Binding DisplayText}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>
    <DataTemplate x:Key="IndicatorTemplateKey">
        <dxdashi:DeltaValuePresenter ShowValue="False" IndicatorType="{Binding Path=IndicatorType}" IsGood="{Binding Path=IsGood}" />
    </DataTemplate>
    <DataTemplate x:Key="SparklineTemplateKey">
        <Border Background="Transparent">
            <Border.ToolTip>
                <StackPanel>
                    <DockPanel>
                        <TextBlock Text="{dxdash:DashboardLocalizationString SparklineTooltipStartValue}" />
                        <TextBlock Text=" " />
                        <TextBlock Text="{Binding TooltipValues.Start}" />
                    </DockPanel>
                    <DockPanel>
                        <TextBlock Text="{dxdash:DashboardLocalizationString SparklineTooltipEndValue}" />
                        <TextBlock Text=" " />
                        <TextBlock Text="{Binding TooltipValues.End}" />
                    </DockPanel>
                    <DockPanel>
                        <TextBlock Text="{dxdash:DashboardLocalizationString SparklineTooltipMinValue}" />
                        <TextBlock Text=" " />
                        <TextBlock Text="{Binding TooltipValues.Min}" />
                    </DockPanel>
                    <DockPanel>
                        <TextBlock Text="{dxdash:DashboardLocalizationString SparklineTooltipMaxValue}" />
                        <TextBlock Text=" " />
                        <TextBlock Text="{Binding TooltipValues.Max}" />
                    </DockPanel>
                </StackPanel>                
            </Border.ToolTip>
        <dxe:SparklineEdit Focusable="False" Background="Transparent" EditValue="{Binding Value}" StyleSettings="{Binding StyleSettings}">
        </dxe:SparklineEdit>
        </Border>
    </DataTemplate>

    <ControlTemplate x:Key="ItemTemplate" TargetType="{x:Type dxdashi:CardItem}">
        <Grid>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource {dxdasht:CardItemThemeKey ResourceKey=Background}}" Margin="1">
                <Grid Margin="{TemplateBinding Padding}">
                    <dxmvvm:Interaction.Behaviors>
                        <dxdashi:CardLayoutBehavior ActualValueTemplate="{StaticResource ActualValueTemplateKey}" TitleTemplate="{StaticResource TitleTemplateKey}" SubtitleTemplate="{StaticResource SubtitleTemplateKey}" PercentVariationTemplate="{StaticResource PercentVariationTemplateKey}" AbsoluteVariationTemplate="{StaticResource AbsoluteVariationTemplateKey}" IndicatorTemplate="{StaticResource IndicatorTemplateKey}" SparklineTemplate="{StaticResource SparklineTemplateKey}" MainTextForeground="{DynamicResource {dxdasht:CardItemThemeKey ResourceKey=MainTextForeground}}" GoodForeground="{DynamicResource {dxdasht:DeltaValuePresenterThemeKey ResourceKey=GoodForeground}}" BadForeground="{DynamicResource {dxdasht:DeltaValuePresenterThemeKey ResourceKey=BadForeground}}" WarningForeground="{DynamicResource {dxdasht:DeltaValuePresenterThemeKey ResourceKey=WarningForeground}}" NeutralForeground="{DynamicResource {dxdasht:DeltaValuePresenterThemeKey ResourceKey=NeutralForeground}}" />
                    </dxmvvm:Interaction.Behaviors>
                </Grid>
            </Border>
            <Border Background="{DynamicResource {dxdasht:CardItemThemeKey ResourceKey=HighlightedBackground}}" BorderBrush="{DynamicResource {dxdasht:CardItemThemeKey ResourceKey=HighlightedBorderBrush}}" BorderThickness="1" CornerRadius="2" Opacity="{DXBinding 'IsSelected ? 0.5d : 0.3d'}" Visibility="{DXBinding 'IsHighlighted || IsSelected ? `Visible` : `Collapsed`'}" IsHitTestVisible="False" />
        </Grid>
    </ControlTemplate>

    <DataTemplate x:Key="{dxdasht:CardItemThemeKey ResourceKey=Template}">
        <dxdashi:CardItemsControl Style="{Binding Path=(dxdash:DashboardLayoutItem.ViewStyle), RelativeSource={RelativeSource TemplatedParent}}" />
    </DataTemplate>

    <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardXpf.Internal.CardItem}" TargetType="{x:Type dxdashi:CardItem}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{StaticResource ItemTemplate}" />
        <Setter Property="Background" Value="{DynamicResource {dxdasht:CardItemThemeKey ResourceKey=CardItemBackground}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {dxdasht:CardItemThemeKey ResourceKey=CardItemBorderBrush}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="16" />
    </Style>
    <Style x:Key="{dxdasht:CardItemThemeKey ResourceKey=ViewStyle}" TargetType="{x:Type dxdashi:CardItemsControl}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="ItemsSource" Value="{Binding ItemsSource}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <dxdashi:CardsPanel VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxdashi:CardItem />
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <ScrollViewer CanContentScroll="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.DashboardXpf.Internal.CardItemContainer}" TargetType="{x:Type dxdashi:CardItemContainer}">
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="dxdashi:CardItemContainer">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ItemsControl>
                                    <dxmvvm:FocusBehavior EventName="MouseDown" />
                                    <dxmvvm:EventToCommand EventName="MouseDown" Command="{Binding MouseDownCommand}" PassEventArgsToCommand="True" MarkRoutedEventsAsHandled="True" EventArgsConverter="{StaticResource EventToCommandConverter}" />
                                    <dxmvvm:EventToCommand EventName="MouseUp" Command="{Binding MouseUpCommand}" PassEventArgsToCommand="True" EventArgsConverter="{StaticResource EventToCommandConverter}" />
                                    <dxmvvm:EventToCommand EventName="MouseMove" Command="{Binding MouseMoveCommand}" PassEventArgsToCommand="True" EventArgsConverter="{StaticResource EventToCommandConverter}" />
                                    <dxmvvm:EventToCommand EventName="MouseDoubleClick" Command="{Binding MouseDoubleClickCommand}" PassEventArgsToCommand="True" EventArgsConverter="{StaticResource EventToCommandConverter}" />
                                    <dxmvvm:EventToCommand EventName="MouseLeave" Command="{Binding MouseLeaveCommand}" PassEventArgsToCommand="True" EventArgsConverter="{StaticResource EventToCommandConverter}" />
                                    <dxmvvm:EventToCommand EventName="KeyUp" Command="{Binding KeyUpCommand}" PassEventArgsToCommand="True" />
                                    <dxmvvm:EventToCommand EventName="KeyDown" Command="{Binding KeyDownCommand}" PassEventArgsToCommand="True" />
                                </ItemsControl>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>