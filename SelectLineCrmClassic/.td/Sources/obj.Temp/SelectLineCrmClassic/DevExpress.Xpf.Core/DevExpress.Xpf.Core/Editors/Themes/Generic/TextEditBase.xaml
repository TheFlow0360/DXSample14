<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors" xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars" xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys" xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxcore_unique_xmlns="http://schemas.devexpress.com/winfx/2008/xaml/core">

    <ResourceDictionary.MergedDictionaries>
        <dxdst:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.SelectLineCrmClassic.v17.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Editors/Themes/Generic/Common.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <dxei:HorizontalContentAlignmentToTextAlignmentConverter x:Key="HorizontalContentAlignmentToTextAlignmentConverter" />
    <dxei:TextBoxPaddingConverter x:Key="TextEditTextBoxPaddingConverter" />

    <Style x:Key="BaseTextBlockStyleBase" TargetType="{x:Type TextBlock}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;10;6" /><Setter Property="TextAlignment" Value="{Binding HorizontalContentAlignment, Converter={StaticResource HorizontalContentAlignmentToTextAlignmentConverter}}" />
        <Setter Property="VerticalAlignment" Value="{Binding VerticalContentAlignment}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Padding" Value="{Binding Padding}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Background" Value="{Binding Background}" />
        <Setter Property="Focusable" Value="{Binding Focusable}" />
        <Setter Property="TextTrimming" Value="{Binding TextTrimming}" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="{Binding IsTabStop}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsNullTextVisible}" Value="true">
                <Setter Property="Foreground" Value="{Binding Path=NullTextForeground}" />
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.35" />
            </Trigger>
        </Style.Triggers> 
    </Style>
    <Style x:Key="BaseTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyleBase}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;29;6" /><Setter Property="TextWrapping" Value="{Binding TextWrapping}" />
        <Setter Property="TextDecorations" Value="{Binding TextDecorations}" />
    </Style>
    <Style x:Key="BaseTextBlockInplaceStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;33;6" /><Setter Property="UseLayoutRounding" Value="False" />
    </Style>

    
    <Style x:Key="BaseTextStyle" TargetType="{x:Type TextBox}">
        
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;38;6" /><Setter Property="MaxLength" Value="{Binding MaxLength}" />
        <Setter Property="IsTabStop" Value="{Binding IsTabStop}" />
        <Setter Property="Focusable" Value="{Binding Focusable}" />
        <Setter Property="TextWrapping" Value="{Binding TextWrapping}" />
        <Setter Property="Background" Value="{Binding Background}" />
        <Setter Property="CaretBrush" Value="{DynamicResource {dxet:TextEditThemeKey ResourceKey=CaretBrush}}" />
        <Setter Property="Padding" Value="{Binding Padding}" />
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}" />
        <Setter Property="AcceptsReturn" Value="{Binding AcceptsReturn}" />
        <Setter Property="VerticalScrollBarVisibility" Value="{Binding VerticalScrollBarVisibility}" />
        <Setter Property="HorizontalScrollBarVisibility" Value="{Binding HorizontalScrollBarVisibility}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                
                <ControlTemplate TargetType="{x:Type TextBox}">
                    
                    <dx:DXBorder Background="{TemplateBinding Background}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;58;22">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="True" Padding="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TextEditTextBoxPaddingConverter}}" dxcore_unique_xmlns:FocusHelper2.Focusable="False" Template="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=ScrollViewerTemplate}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;59;26">
                        </ScrollViewer>
                    </dx:DXBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="PART_ContentHost" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Setter Property="AcceptsTab" Value="{Binding AcceptsTab}" />
        <Setter Property="CharacterCasing" Value="{Binding CharacterCasing}" />
        <Setter Property="ContextMenu" Value="{Binding ContextMenu}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Foreground" Value="{Binding Foreground}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment}" />
        <Setter Property="TextDecorations" Value="{Binding TextDecorations}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment}" />
        <Setter Property="dxb:BarManager.DXContextMenu" Value="{Binding Path=(dxb:BarManager.DXContextMenu)}" />
        
        
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsNullTextVisible}" Value="true">
                <Setter Property="Foreground" Value="{Binding Path=NullTextForeground}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="BaseTextInplaceStyle" TargetType="{x:Type TextBox}">
        
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;95;6" /><Setter Property="MaxLength" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).MaxLength}" />
        <Setter Property="Background" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Background}" />
        <Setter Property="CaretBrush" Value="{DynamicResource {dxet:TextEditThemeKey ResourceKey=CaretBrush}}" />
        <Setter Property="Padding" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding}" />
        <Setter Property="IsTabStop" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsTabStop}" />
        <Setter Property="Focusable" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Focusable}" />
        <Setter Property="IsReadOnly" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsReadOnly}" />
        <Setter Property="AcceptsReturn" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).AcceptsReturn}" />
        <Setter Property="TextWrapping" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).TextWrapping}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment}" />
        <Setter Property="VerticalScrollBarVisibility" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalScrollBarVisibility}" />
        <Setter Property="HorizontalScrollBarVisibility" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalScrollBarVisibility}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                
                <ControlTemplate TargetType="{x:Type TextBox}">
                    
                    <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="True" Padding="{Binding Path=Padding, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TextEditTextBoxPaddingConverter}}" dxcore_unique_xmlns:FocusHelper2.Focusable="False" Template="{DynamicResource {dxet:EditorListBoxThemeKey ResourceKey=ScrollViewerTemplate}}" Background="{TemplateBinding Background}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;116;22" />
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).IsNullTextVisible}" Value="true">
                            <Setter Property="Foreground" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).NullTextForeground}" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.35" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Setter Property="AcceptsTab" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).AcceptsTab}" />
        <Setter Property="CharacterCasing" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).CharacterCasing}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="ContextMenu" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).ContextMenu}" />
        <Setter Property="dxb:BarManager.DXContextMenu" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxb:BarManager.DXContextMenu)}" />
        <Setter Property="Foreground" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).Foreground}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).HorizontalContentAlignment}" />
        <Setter Property="TextDecorations" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).TextDecorations}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=(dxe:BaseEdit.OwnerEdit).VerticalContentAlignment}" />
        
        
    </Style>
    

    

    <Style x:Key="{dxet:TextEditThemeKey ResourceKey=TextStyle}" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseTextStyle}"><Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;151;6" />
    </Style>

    <Style x:Key="{dxet:TextEditThemeKey ResourceKey=TextInplaceStyle}" TargetType="{x:Type TextBox}" BasedOn="{StaticResource BaseTextInplaceStyle}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;154;6" /><Setter Property="dxeh:EditorMarginHelper.Margin" Value="2,2,2,2,0,2,2,2" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="dxeh:EditorMarginHelper.Margin" Value="13,13,13,13,0,13,13,13" />
            </Trigger>
        </Style.Triggers>        
    </Style>

    <Style BasedOn="{StaticResource BaseTextBlockInplaceStyle}" x:Key="{dxet:TextEditThemeKey ResourceKey=TextBlockInplaceStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;163;6" /><Setter Property="dxeh:EditorMarginHelper.Margin" Value="4,2,4,2,2,2,4,2" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="dxeh:EditorMarginHelper.Margin" Value="14,13,14,13,13,13,14,13" />
            </Trigger>
        </Style.Triggers>        
    </Style>

    <Style BasedOn="{StaticResource BaseTextBlockStyle}" x:Key="{dxet:TextEditThemeKey ResourceKey=TextBlockStyle}" TargetType="{x:Type TextBlock}">
        <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;172;6" /><Setter Property="Margin" Value="5,2,5,2" />
        <Style.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Margin" Value="14,13,14,13" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=DisplayInplaceTemplate}">
        <TextBlock x:Name="PART_Editor" Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextBlockInplaceStyle}}" dxcore_unique_xmlns:FocusHelper2.Focusable="False" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;182;10" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EditNonEditableTemplate}">
        <TextBlock x:Name="PART_Editor" Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextBlockStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;186;10">
            <TextBlock.FocusVisualStyle>
                <Style>
                    <Setter Property="dxcore_unique_xmlns:BlendHelper2.StyleInfo" Value="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;188;18" /><Setter Property="Control.Template">
                        <Setter.Value>
                            <ControlTemplate />
                        </Setter.Value>
                    </Setter>
                </Style>
            </TextBlock.FocusVisualStyle>
        </TextBlock>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EditNonEditableInplaceTemplate}">
        <TextBlock x:Name="PART_Editor" Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextBlockInplaceStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;200;10" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EditInplaceTemplate}">
        <TextBox x:Name="PART_Editor" Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextInplaceStyle}}" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;204;10" />
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=EditTemplate}">
        <TextBox x:Name="PART_Editor" Style="{DynamicResource {dxet:TextEditThemeKey ResourceKey=TextStyle}}" dxei:EditorMarginHelper.Margin="3,2,3,2,0,2,3,2" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;208;10" />
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="PART_Editor" Property="dxeh:EditorMarginHelper.Margin" Value="14,13,14,13,0,13,14,13" />
            </Trigger>
        </ControlTemplate.Triggers>        
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:TextEditThemeKey ResourceKey=ErrorControlTemplate}" TargetType="{x:Type dxe:ErrorControl}">
        <ContentPresenter x:Name="content" Margin="3,0,3,0" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RenderTransformOrigin="0.5,0.5" dxcore_unique_xmlns:BlendHelper2.ThemeInfo="DevExpress.Xpf.Core\DevExpress.Xpf.Core\Editors\Themes\Generic\TextEditBase.xaml;217;10">
            <ContentPresenter.Resources>
                <Storyboard x:Key="showErrorStoryboard">
                    <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.2000000" Storyboard.TargetName="content" Storyboard.TargetProperty="Opacity" From="0" To="1" />
                    <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.1000000" Storyboard.TargetName="content" Storyboard.TargetProperty="RenderTransform.ScaleX" From="1" To="1.2" />
                    <DoubleAnimation BeginTime="00:00:00.1000000" Duration="00:00:00.1000000" Storyboard.TargetName="content" Storyboard.TargetProperty="RenderTransform.ScaleX" From="1.2" To="1" />
                    <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00.1000000" Storyboard.TargetName="content" Storyboard.TargetProperty="RenderTransform.ScaleY" From="1" To="1.2" />
                    <DoubleAnimation BeginTime="00:00:00.1000000" Duration="00:00:00.1000000" Storyboard.TargetName="content" Storyboard.TargetProperty="RenderTransform.ScaleY" From="1.2" To="1" />
                </Storyboard>
                <Storyboard x:Key="hideErrorStoryboard">
                    <DoubleAnimation BeginTime="00:00:00" Duration="00:00:00" Storyboard.TargetName="content" Storyboard.TargetProperty="Opacity" To="0" />
                </Storyboard>
            </ContentPresenter.Resources>
            <ContentPresenter.RenderTransform>
                <ScaleTransform />
            </ContentPresenter.RenderTransform>
        </ContentPresenter>
    </ControlTemplate>

    

</ResourceDictionary>