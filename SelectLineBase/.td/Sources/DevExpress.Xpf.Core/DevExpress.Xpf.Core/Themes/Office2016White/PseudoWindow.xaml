<ResourceDictionary mc:Ignorable="cs" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys" xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:cs="colorscheme_ignorable_uri">
    <ResourceDictionary.MergedDictionaries>
        <dxt:ResourceDictionaryEx Source="/DevExpress.Xpf.Themes.Office2016White.v17.2;component/DevExpress.Xpf.Core/DevExpress.Xpf.Core/Themes/Generic/PseudoWindow.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--InactiveHeaderOpacity-->
    <sys:Double x:Key="{dxt:DXWindowThemeKey ResourceKey=InactiveHeaderOpacity}">0.5</sys:Double>
    <!--Thickness-->
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=ResizeBorderThickness}">4</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectOffset}">32</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectLeftMargins}">0, 10, 0, 10</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectRightMargins}">0, 10, 0, 10</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectTopMargins}">0</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectBottomMargins}">0</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=SizeGripMargin}">7,0,7,7</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerBodyMargin}">6,0,6,6</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerCaptionTextBlockMargin}">6,0,6,0</Thickness>
    <Thickness x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorderPadding}">1</Thickness>
    <Thickness x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderDockMargin}">0</Thickness>
    <Thickness x:Key="{dxt:FloatingContainerThemeKey ResourceKey=HeaderItemsControlMargin}">0,2,0,0</Thickness>
    <!--Brushes-->
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectActiveColor}" Color="#FF0072C6" cs:Name="SolidColorBrush_0001" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey = BorderEffectInactiveColor}" Color="#FF999999" cs:Name="SolidColorBrush_0002" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerActiveBodyBorder}" Color="#FFD6D6D6" cs:Name="SolidColorBrush_0003" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBodyBorder}" Color="#FFD6D6D6" cs:Name="SolidColorBrush_0004" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorder}" Color="#FF0072C6" cs:Name="SolidColorBrush_0005" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBorder}" Color="#FF0072C6" cs:Name="SolidColorBrush_0006" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerBackground}" Color="#FFFBFBFB" cs:Name="SolidColorBrush_0007" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBackground}" Color="#FFFBFBFB" cs:Name="SolidColorBrush_0008" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=ActiveHeaderBackground}" Color="#FFFBFBFB" cs:Name="SolidColorBrush_0009" />
    <SolidColorBrush x:Key="{dxt:DXWindowThemeKey ResourceKey=InactiveHeaderBackground}" Color="#FFFBFBFB" cs:Name="SolidColorBrush_0010" />
    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundNormalState}" Color="#FF222222" cs:Name="SolidColorBrush_0011" />
    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundMouseOverState}" Color="#FFFFFFFF" cs:Name="SolidColorBrush_0012" />
    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonForegroundPressedState}" Color="#FFFFFFFF" cs:Name="SolidColorBrush_0013" />
    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundNormalState}" Color="#FFFFFFFF" cs:Name="SolidColorBrush_0014" />
    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundMouseOverState}" Color="#FFFFFFFF" cs:Name="SolidColorBrush_0015" />
    <SolidColorBrush x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonForegroundPressedState}" Color="#FFFFFFFF" cs:Name="SolidColorBrush_0016" />
    <!--DragwigetTemplate-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDragWidgetTemplate}" TargetType="{x:Type Thumb}">
        <Border Background="#00000000" cs:Name="Border_0001" cs:id="Border_0000" />
    </ControlTemplate>
    <!--SizeGripTemplate-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerSizeGripTemplate}" TargetType="{x:Type Thumb}">
        <Grid Background="#00000000" Margin="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" SnapsToDevicePixels="True" cs:Name="Grid_0001" cs:id="Grid_0000">
            <Path Stretch="Fill" Fill="#FFACACAC" Data="F1 M 671,130L 673,130L 673,132L 671,132L 671,130 Z M 674,130L 676,130L 676,132L 674,132L 674,130 Z M 677,130L 679,130L 679,132L 677,132L 677,130 Z M 677,127L 679,127L 679,129L 677,129L 677,127 Z M 677,124L 679,124L 679,126L 677,126L 677,124 Z M 674,127L 676,127L 676,129L 674,129L 674,127 Z " Width="8" Height="8" cs:Name="Path_0001" cs:id="Path_0000" />
        </Grid>
    </ControlTemplate>
    <!--CaptionTemplate-->
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCaptionTemplate}">
        <Grid x:Name="Root" Height="Auto">
            <dxc:DXWindowSmartCenteringPanel HorizontalAlignment="Stretch" Padding="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerCaptionTextBlockMargin}}">
                <TextBlock x:Name="PART_Text" TextTrimming="CharacterEllipsis" Foreground="#FF3C3C3C" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Path=(dxc:FloatingContainer.FloatingContainer).Caption, RelativeSource={RelativeSource AncestorType=ContentPresenter}}" IsHitTestVisible="False" cs:Name="TextBlock_0001" cs:id="TextBlock_0000" />
            </dxc:DXWindowSmartCenteringPanel>
        </Grid>
    </DataTemplate>
    <!--WindowBordersTemplate-->
    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingActiveBorder}">
        <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorder}}" Padding="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorderPadding}}">
            <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBackground}}" />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingInactiveBorder}">
        <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBorder}}" Padding="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBorderPadding}}">
            <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBackground}}" />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=FloatingBackground}">
        <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerActiveBodyBorder}}" Padding="1">
            <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBackground}}" />
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{dxt:DXWindowThemeKey ResourceKey=InactiveFloatingBackground}">
        <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerInactiveBodyBorder}}" Padding="1">
            <Border Background="{DynamicResource {dxt:DXWindowThemeKey ResourceKey=FloatingContainerBackground}}" />
        </Border>
    </ControlTemplate>
    <!--Window CloseButtonGlyphTemplate-->
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonGlyph}">
        <Grid x:Name="Glyph" Width="10" Height="10">
            <Path x:Name="Path" Stretch="Fill" Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Data="F1 M 0.0502524,1.46447L 1.46447,0.0502548L 5,3.58579L 8.53553,0.0502548L 9.94975,1.46447L 6.41421,5L 9.94975,8.53553L 8.53553,9.94975L 5,6.41421L 1.46447,9.94975L 0.0502523,8.53553L 3.58579,5L 0.0502524,1.46447 Z  " cs:Name="Path_0002" />
        </Grid>
    </DataTemplate>
    <!--Window RestoreButtonGlyphTemplate-->
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerRestoreButtonGlyph}">
        <Grid x:Name="Glyph" Width="10" Height="10">
            <Path x:Name="Path" Stretch="Fill" Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Data="F1 M 6.35783e-007,3L 2,3L 2,9.53674e-007L 10,9.53674e-007L 10,7L 8,7L 8,10L 6.35783e-007,10L 6.35783e-007,3 Z M 8,3L 8,6L 9,6L 9,2L 3,2L 3,3L 8,3 Z M 1,9L 7,9L 7,7L 7,6L 7,5L 1,5L 1,9 Z  " cs:Name="Path_0004" />
        </Grid>
    </DataTemplate>
    <!--Window MinimizeButtonGlyphTemplate-->
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMinimizeButtonGlyph}">
        <Grid x:Name="Glyph" Width="10" Height="2" Margin="0,0,0,-5">
            <Rectangle x:Name="Path" Stretch="Fill" Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" cs:Name="Rectangle_0001" />
        </Grid>
    </DataTemplate>
    <!--Window MaximizeButtonGlyphTemplate-->
    <DataTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerMaximizeButtonGlyph}">
        <Grid x:Name="Glyph" Width="10" Height="10">
            <Path x:Name="Path" Stretch="Fill" Fill="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}" Data="F1 M 10,0L 0,0L 0,10L 10,10L 10,0 Z M 9,3L 9,9L 1,9L 1,3L 9,3 Z " cs:Name="Path_0003" />
        </Grid>
    </DataTemplate>
    <!--Window HeaderDefaultButton Normal Background-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundNormalState}" />
    <!--Window HeaderCloseButton Normal Background-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundNormalState}">
        <Border x:Name="NormalState" Background="#FFE04343" BorderBrush="#FFE04343" BorderThickness="1" cs:Name="Border_0003" cs:id="Border_0001" />
    </ControlTemplate>
    <!--Window HeaderDefaultButton MouseOver Background-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundMouseOverState}">
        <Border x:Name="HoverState" Background="#FF3665B3" BorderBrush="#FF3665B3" BorderThickness="1" cs:Name="Border_0007" cs:id="Border_0001" />
    </ControlTemplate>
    <!--Window HeaderCloseButton MouseOver Background-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundMouseOverState}">
        <Border x:Name="HoverState" Background="#FFE04343" BorderBrush="#FFE04343" BorderThickness="1" cs:Name="Border_0003" cs:id="Border_0001" />
    </ControlTemplate>
    <!--Window HeaderDefaultButton Pressed Background-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerDefaultButtonBackgroundPressedState}">
        <Border x:Name="Pressed" Background="#FF43639B" BorderBrush="#FF43639B" BorderThickness="1" cs:Name="Border_0005" cs:id="Border_0001" />
    </ControlTemplate>
    <!--Window HeaderCloseButton Pressed Background-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerCloseButtonBackgroundPressedState}">
        <Border x:Name="Pressed" Background="#FFC75050" BorderBrush="#FFC75050" BorderThickness="1" cs:Name="Border_0006" cs:id="Border_0001" />
    </ControlTemplate>
    <!--WindowTemplate-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerWindowTemplate}" TargetType="{x:Type dxc:FloatingContainerControl}">
        <dxc:FloatingWindowContainer Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerStyle}}" />
    </ControlTemplate>
    <!--AdornerTemplate-->
    <ControlTemplate x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerAdornerTemplate}" TargetType="{x:Type dxc:FloatingContainerControl}">
        <dxc:FloatingAdornerContainer Style="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerStyle}}" />
    </ControlTemplate>
    <Style TargetType="{x:Type dxc:HeaderItemControl}" x:Key="headerItemControlCommonStyle">
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="MinWidth" Value="26" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonTemplate}}" />
        <Setter Property="TemplateProvider" Value="{Binding Path=(dxc:HeaderItemControl.CommonTemplateProvider), RelativeSource={RelativeSource Self}}" />
    </Style>
    <Style TargetType="{x:Type dxc:HeaderItemControl}" x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}" BasedOn="{StaticResource ResourceKey=headerItemControlCommonStyle}">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="22" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Style.Triggers>
            <Trigger Property="dxc:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Height" Value="44" />
                <Setter Property="Width" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type dxc:HeaderItemControl}" x:Key="{dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderCloseButtonStyle}" BasedOn="{StaticResource ResourceKey={dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonStyle}}">
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="MinWidth" Value="44" />
        <Setter Property="TemplateProvider" Value="{Binding Path=(dxc:HeaderItemControl.CloseTemplateProvider), RelativeSource={RelativeSource Self}}" />
        <Style.Triggers>
            <Trigger Property="dxc:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Height" Value="44" />
                <Setter Property="Width" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--DXWindowIconStyle-->
    <Style x:Key="{dxt:FloatingContainerThemeKey ResourceKey=DXWindowIconStyle}" TargetType="{x:Type Image}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Margin" Value="6,0,5,0" />
        <Setter Property="Stretch" Value="Fill" />
    </Style>
    <!--____ThemedWindow HeaderItems Styles____-->
    <!--HeaderItem Style-->
    <Style TargetType="{x:Type dxc:HeaderItemControl}" x:Key="headerItemControlStyle">
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="MinWidth" Value="26" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template" Value="{DynamicResource {dxt:FloatingContainerThemeKey ResourceKey=FloatingContainerHeaderButtonTemplate}}" />
        <!--<Setter Property="TemplateProvider" Value="{Binding Path=(dx:HeaderItemControl.CommonTemplateProvider), RelativeSource={RelativeSource Self}}" />-->
        <Style.Triggers>
            <Trigger Property="dxc:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Height" Value="44" />
                <Setter Property="Width" Value="44" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--HeaderButtonStyle-->
    <Style TargetType="{x:Type dxc:HeaderItemControl}" x:Key="{dxt:ThemedWindowHeaderItemsThemeKey ResourceKey=HeaderButtonStyle}" BasedOn="{StaticResource ResourceKey=headerItemControlStyle}">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="22" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
    </Style>
    <!--HeaderCloseButtonStyle-->
    <Style TargetType="{x:Type dxc:HeaderItemControl}" x:Key="{dxt:ThemedWindowHeaderItemsThemeKey ResourceKey=HeaderCloseButtonStyle}" BasedOn="{StaticResource ResourceKey={dxt:ThemedWindowHeaderItemsThemeKey ResourceKey=HeaderButtonStyle}}">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="44" />
        <!--<Setter Property="TemplateProvider" Value="{Binding Path=(dx:HeaderItemControl.CloseTemplateProvider), RelativeSource={RelativeSource Self}}" />-->
    </Style>
</ResourceDictionary>